<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>Last Month traffic Statistics</title>
		
		
		<!-- 1. Add these JavaScript inclusions in the head of your page -->
		<script type="text/javascript" src="script/jquery.min.js"></script>
		<script type="text/javascript" src="script/highcharts.js"></script>
		
		<!-- 1a) Optional: add a theme file -->
		<!--
			<script type="text/javascript" src="../js/themes/gray.js"></script>
		-->
		
		<!-- 1b) Optional: the exporting module -->
		<!--
		<script type="text/javascript" src="script/exporting.js"></script>
		-->
		
		<!-- 2. Add the JavaScript to initialize the chart on document ready -->
		<script type="text/javascript">
             function numAdd(num1,num2){
			    return (num1 * 1000 + num2 * 1000) / 1000;
			}		    		      
			var chart;
			$(document).ready(function() {
				var options = {
					chart: {
						renderTo: 'container',
						defaultSeriesType: 'line',
						marginRight: 40,
						marginBottom: 75,
                        ignoreHiddenSeries:false,
                        backgroundColor:"#E5E5E5",
						reflow:true
					},
					title: {
						text: '<%3966%>',
						x: -20 ,//center,
						margin: 25
					},
					subtitle: {
						text: '',
						x: 20,
						align: 'left'
						
					},
					credits:{
					   enabled:false
					},
					xAxis: {
						categories: [],
                        tickInterval:2,
                        tickLength:0,
                        tickmarkPlacement:"on",
                        labels: {
                            rotation: -45,
                            align: 'right',
                            style: {
                            	 font: 'normal 13px Verdana, sans-serif'
                            }
                        }
					},
					yAxis: {
                        tickInterval:10,
                        max: 100,
                        min:0,
                        title: {
                        text: '<%3967%>'
                        },
                        labels: {
                            formatter :function(){
                                return this.value;
                            }
                        },
                        plotLines: [{
                            value :0,
                            width: 0,
                            color: '#FF9900'
                        }],
                        
                        lineWidth: 2
                    },
                    
					legend: {
					    enabled: false,
						layout: 'vertical',
						align: 'right',
						verticalAlign: 'top',
						x: -10,
						y: 100,
						borderWidth: 0
					},
					tooltip: {
						formatter: function() {
							return ''+
								this.x + "   "+ this.y +'<%3968%>';
						}
					},
					plotOptions: {
					  
						line: {
							marker: {
							    enabled: true,
							    radius: 5,
							    symbol: 'diamond'
							},
							lineWidth: 2,
							fillOpacity:10
						}
					},
					series: []
				};
				var limit = parseInt("<%2148%>");//0,no limit;1,download limit;2,both limit.
				 var time_str = "<%1136%>";
                var need_time_str = time_str.substring(time_str.indexOf(",")+2);

                var time = new Array();
                time= need_time_str.split(" ");
				var year = parseInt(time[2]);
				if(year < 1900)
				    year += 1900;
                if(time[1] == '<%3969%>')
                    var month = 1;
                else if(time[1] == '<%3970%>')
                    var month = 2;
                else if(time[1] == '<%3971%>')
                    var month = 3;
                else if(time[1] == '<%3972%>')
                    var month = 4;
                else if(time[1] == '<%3973%>')
                    var month = 5;
                else if(time[1] == '<%3974%>')
                    var month = 6;
                else if(time[1] == '<%3975%>')
                    var month = 7;
                else if(time[1] == '<%3976%>')
                    var month = 8;
                else if(time[1] == '<%3977%>')
                    var month = 9;
                else if(time[1] == '<%3978%>')
                    var month = 10;
                else if(time[1] == '<%3979%>')
                    var month = 11;
                else if(time[1] == '<%3980%>')
                    var month = 12;
				var limit_byte = parseInt("<%2149%>");
				var limit_hour = parseInt("<%2150%>");
				var connection_limit = parseInt("<%2147%>");
                var used_volume_byte = 0;
                var used_down_byte = 0;
                var used_hour = 0;
                var traffic_enable = parseInt("<%2146%>");
                var start_day = parseInt("<%2269%>");
                var days = 0;
                if(month == 1)
                {
                    month = 12;
                    year -= 1;
                }
                else
                    month -= 1;
				var series = {
				    data: []
				};
				if((month == 1)||(month == 3)||(month == 5)||(month == 7)||(month == 8)||(month == 10)||(month == 12))
				{
				    days = 31;
			    }
			    else if(month == 2)
			    {
			        if(((year%4 == 0)&&(year%100 != 0))||(year%400 == 0))
			        {
                        days = 29;
			        }
			        else
			        {
                        days = 28;
			        }
			    }
			    else
			    {
                    days = 30;
			    }
                if(start_day != days%2)
			         options.xAxis.max = days - start_day;
			    else
			         options.xAxis.max = days - start_day + 1;
			    for(x = start_day;x <= days; x++)
			    {
    			    var date_show = "";
    			    date_show += (month + "/" + x + "/" + year)
    			    options.xAxis.categories.push(date_show);
			   }
			   if(connection_limit == 1)
			   {
			     
                    options.yAxis.title.text = '<%3981%>';
                    
                    for(i = start_day;i <= days;i++)
                    {
                        var ctime_string = "";
                        var hour = 0;
                        var minute = 0;
                        var hour_float = 0.0;
                        if(i == 1)
                            ctime_string = "<%3982%>";
                        else if(i == 2)
                            ctime_string = "<%3983%>";
                        else if(i == 3)
                            ctime_string = "<%3984%>";
                        else if(i == 4)
                            ctime_string = "<%3985%>";
                        else if(i == 5)
                            ctime_string = "<%3986%>";    
                        else if(i == 6)
                            ctime_string = "<%3987%>";
                        else if(i == 7)
                            ctime_string = "<%3988%>";
                        else if(i == 8)
                            ctime_string = "<%3989%>";
                        else if(i == 9)
                            ctime_string = "<%3990%>";
                         else if(i == 10)
                            ctime_string = "<%3991%>";
                        else if(i == 11)
                            ctime_string = "<%3992%>";
                        else if(i == 12)
                            ctime_string = "<%3993%>";
                        else if(i == 13)
                            ctime_string = "<%3994%>";    
                        else if(i == 14)
                            ctime_string = "<%3995%>";
                        else if(i == 15)
                            ctime_string = "<%3996%>";
                        else if(i == 16)
                            ctime_string = "<%3997%>";
                        else if(i == 17)
                            ctime_string = "<%3998%>";
                         else if(i == 18)
                            ctime_string = "<%3999%>";
                        else if(i == 19)
                            ctime_string = "<%4000%>";
                        else if(i == 20)
                            ctime_string = "<%4001%>";
                        else if(i == 21)
                            ctime_string = "<%4002%>";    
                        else if(i == 22)
                            ctime_string = "<%4003%>";
                        else if(i == 23)
                            ctime_string = "<%4004%>";
                        else if(i == 24)
                            ctime_string = "<%4005%>";
                        else if(i == 25)
                            ctime_string = "<%4006%>";
                         else if(i == 26)
                            ctime_string = "<%4007%>";
                        else if(i == 27)
                            ctime_string = "<%4008%>";
                        else if(i == 28)
                            ctime_string = "<%4009%>";
                        else if(i == 29)
                            ctime_string = "<%4010%>";    
                        else if(i == 30)
                            ctime_string = "<%4011%>";
                        else
                            ctime_string = "<%4012%>";
                        if(ctime_string == "--:--")
                            break;
                        else if(ctime_string.indexOf(":") != -1)
                        {
                            hour += parseInt(ctime_string.substring(0,ctime_string.indexOf(":")));
                            minute += parseInt(ctime_string.substring(ctime_string.indexOf(":")+1));
                            hour += Math.floor(minute/60);
                            minute =  minute%60;
                            hour_float = minute/60;
                            used_hour += hour;
                            used_hour = numAdd(used_hour,Math.round(hour_float*10)/10);
                        }    
                        series.data.push(used_hour);
                    }
                    var subtitle = '<%4013%>'+'<%4014%>' + ' ' + month + '/' + start_day +'/' +  year + ' '+'<%4015%>'+ ' ' + month + '/' + days + '/' + year +'<br>'+ '<%4016%>' + used_hour + '<%4017%>';
                    options.subtitle.text = subtitle;
                    options.tooltip.formatter = function() {
                    return ''+
                    	this.x + "   "+ this.y +'<%4017%>';
                    }
                    options.yAxis.plotLines[0].value = limit_hour;
				    options.yAxis.plotLines[0].width = 5;
				    if(limit_hour == 0)
                        options.yAxis.plotLines[0].width = 0;
				    if(limit_hour < used_hour)
                        options.yAxis.max = used_hour * 1.2;
                    else
                    {
                        if(limit_hour > 0)
                        {
                            options.yAxis.max = limit_hour * 1.2;
                        }
                    }
				    options.yAxis.tickInterval = Math.ceil(options.yAxis.max/10);
			   }
			   else
			   {
		           if(limit == 1)
		           {
			           
                        for(i = start_day;i <= days;i++)
                        {
                            if(i == 1)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4018%>"));
                            else if(i == 2)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4019%>"));
                            else if(i == 3)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4020%>"));
                            else if(i == 4)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4021%>"));
                            else if(i == 5)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4022%>"));    
                            else if(i == 6)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4023%>"));
                            else if(i == 7)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4024%>"));
                            else if(i == 8)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4025%>"));
                            else if(i == 9)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4026%>"));
                             else if(i == 10)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4027%>"));
                            else if(i == 11)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4028%>"));
                            else if(i == 12)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4029%>"));
                            else if(i == 13)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4030%>"));    
                            else if(i == 14)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4031%>"));
                            else if(i == 15)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4032%>"));
                            else if(i == 16)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4033%>"));
                            else if(i == 17)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4034%>"));
                             else if(i == 18)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4035%>"));
                            else if(i == 19)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4036%>"));
                            else if(i == 20)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4037%>"));
                            else if(i == 21)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4038%>"));    
                            else if(i == 22)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4039%>"));
                            else if(i == 23)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4040%>"));
                            else if(i == 24)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4041%>"));
                            else if(i == 25)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4042%>"));
                             else if(i == 26)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4043%>"));
                            else if(i == 27)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4044%>"));
                            else if(i == 28)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4045%>"));
                            else if(i == 29)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4046%>"));    
                            else if(i == 30)
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4047%>"));
                            else
                                used_down_byte = numAdd(used_down_byte,parseFloat("<%4048%>"));
                            if(used_down_byte > 1000)
                                series.data.push(parseInt(used_down_byte));
                            else
                                series.data.push(used_down_byte);
                        }
                        var subtitle = '<%4013%>'+'<%4014%>' + ' ' + month + '/' + start_day +'/' +  year + ' '+'<%4015%>'+ ' ' + month + '/' + days + '/' + year +'<br>'+ '<%4049%>' + used_down_byte + '<%3968%>';
                        options.subtitle.text = subtitle;
                        options.yAxis.plotLines[0].value = limit_byte;
                        options.yAxis.plotLines[0].width = 5;
                        if(limit_byte == 0)
                            options.yAxis.plotLines[0].width = 0;
                        if(limit_byte < used_down_byte)
                            options.yAxis.max = used_down_byte * 1.2;
                        else
                        {
                            if(limit_byte > 0)
                            {
                                options.yAxis.max = limit_byte * 1.2;
                            }
                        }
				        options.yAxis.tickInterval = Math.ceil(options.yAxis.max/10);
			       }
			       else
    			   {
    			        
                        for(i = start_day;i <= days;i++)
                        {
                             if(i == 1)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4050%>"));
                            else if(i == 2)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4051%>"));
                            else if(i == 3)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4052%>"));
                            else if(i == 4)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4053%>"));
                            else if(i == 5)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4054%>"));    
                            else if(i == 6)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4055%>"));
                            else if(i == 7)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4056%>"));
                            else if(i == 8)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4057%>"));
                            else if(i == 9)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4058%>"));
                             else if(i == 10)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4059%>"));
                            else if(i == 11)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4060%>"));
                            else if(i == 12)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4061%>"));
                            else if(i == 13)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4062%>"));    
                            else if(i == 14)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4063%>"));
                            else if(i == 15)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4064%>"));
                            else if(i == 16)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4065%>"));
                            else if(i == 17)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4066%>"));
                             else if(i == 18)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4067%>"));
                            else if(i == 19)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4068%>"));
                            else if(i == 20)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4069%>"));
                            else if(i == 21)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4070%>"));    
                            else if(i == 22)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4071%>"));
                            else if(i == 23)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4072%>"));
                            else if(i == 24)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4073%>"));
                            else if(i == 25)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4074%>"));
                             else if(i == 26)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4075%>"));
                            else if(i == 27)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4076%>"));
                            else if(i == 28)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4077%>"));
                            else if(i == 29)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4078%>"));    
                            else if(i == 30)
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4079%>"));
                            else
                                used_volume_byte = numAdd(used_volume_byte,parseFloat("<%4080%>"));
                            if(used_volume_byte > 1000)
                                series.data.push(parseInt(used_volume_byte));
                            else
                                series.data.push(used_volume_byte);
                        }
                        var subtitle = '<%4013%>'+'<%4014%>' + ' ' + month + '/' + start_day +'/' +  year + ' '+'<%4015%>'+ ' ' + month + '/' + days + '/' + year +'<br>'+ '<%4081%>' + used_volume_byte + '<%3968%>';
                        options.subtitle.text = subtitle;
				        if(limit == 0)
				        {
				            if(used_volume_byte > 0)
				            {
    				            options.yAxis.max = used_volume_byte * 1.2
    				            options.yAxis.tickInterval = Math.ceil(options.yAxis.max/10);
				            }
				        }
				        else
				        {
				            options.yAxis.plotLines[0].value = limit_byte;
				            options.yAxis.plotLines[0].width = 5;
				            if(limit_byte == 0)
				                options.yAxis.plotLines[0].width = 0;
				            if(limit_byte < used_volume_byte)
                                options.yAxis.max = used_volume_byte * 1.2;
                            else
                            {
                                if(limit_byte > 0)
                                {
                                    options.yAxis.max = limit_byte * 1.2;
                                }
                            }
                            options.yAxis.tickInterval = Math.ceil(options.yAxis.max/10); 
				        }
                    }
			 }
				options.series.push(series);
	            if(series.data.length <= 0)
			    {
                    options.plotOptions.line.marker.enabled = false;
                    options.tooltip.enabled = false;
                    series.data.push(0);			     
			    }
				var chart = new Highcharts.Chart(options);
				
			});
				
		</script>
		
	</head>
	<body>
		
		<!-- 3. Add the container -->
		<div id="container" style="width: 500px; height: 400px;margin: 0 auto"></div>
		
				
	</body>
</html>
