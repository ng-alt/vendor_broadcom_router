
<!DOCTYPE HTML>
<html>
<head>
<META name="description" content="R7000">
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<META http-equiv="Content-Style-Type" content="text/css">
<META http-equiv="Pragma" content="no-cache">
<META HTTP-equiv="Cache-Control" content="no-cache">
<META HTTP-EQUIV="Expires" CONTENT="Mon, 06 Jan 1990 00:00:01 GMT">

<title>NETGEAR Router R7000</title> 
<link rel="stylesheet" href="css/table_noh.css">
<link rel="stylesheet" href="css/scrollbar.css">
<link rel="stylesheet" href="css/button.css">
<link href="css/tabelizer.css" media="all" rel="stylesheet" type="text/css">

<script src="jquery.js"></script>
<script src="script/jquery.mousewheel.js"></script>
<script type="text/javascript" src="script/jquery.jscrollpane.min.js"></script>
<script type="text/javascript" src="script/sorttable.js"></script>

<script src="script/script.js"></script>
<link rel="stylesheet" href="form.css">
<script language="javascript" type="text/javascript" src="func.js"></script>
<script language="javascript" type="text/javascript" src="msg.js"></script>
<script language="javascript" type="text/javascript" src="utility.js"></script>
<script language="javascript" type="text/javascript" src="browser.js"></script>
<script language="javascript" type="text/javascript" src="md5.js"></script>
<script language="javascript" type="text/javascript" src="wep.js"></script>
<script language="javascript" type="text/javascript" src="script/jquery-1.11.2.min.js"></script>
<script language="javascript" type="text/javascript" src="script/jquery-ui-1.10.4.custom.min.js"></script>
<script language="javascript" type="text/javascript" src="script/jquery.tabelizer.js"></script>

<style type="text/css">
A {
     COLOR: blue; TEXT-DECORATION: underline
}
</style>
<script language="javascript" type="text/javascript">
<!--
  
    $(document).ready(function()
    {   
//        $('.scroll-pane').jScrollPane('scrollbarMargin:5px');
        $("#target").submit(function() {
            buttonFilter();
        });

    });


    function setHelpIframeVisible(){
        $('.help-frame-div').css("visibility","visible");
    }


    function showHelpIframe() {

        var imgSrc=document.getElementById('help-button');

        if(imgSrc.src.search("up")>=0)
        {
            $(".help-frame-div").show();
            window.frames["helpframe"].$('#content').jScrollPane({showArrows:true});
            imgSrc.src="img/helparrowdown-icon.gif";
        }
        else
        {
            $(".help-frame-div").hide();
            imgSrc.src="img/helparrowup-icon.gif";
            setTimeout(setHelpIframeVisible,500);
        }
        if((navigator.appName.indexOf("Internet Explorer")==-1) ||
           (navigator.appVersion.indexOf("MSIE 9")==-1))
             change_size();

    }

    function moveToHTMLend()
    {
        window.location.href='#helpframe-anchor';
        setHelpIframeVisible();
    }


    function loadhelp(fname,anchname)
    {
                var pane = window.frames["helpframe"].$('#content');
                var imgSrc=document.getElementById('help-button');
                if(imgSrc.src.search("up")<0)
                {

                        $(".help-frame-div").show();
                        pane.jScrollPane({showArrows:true});


                        if ((loadhelp.arguments.length == 1 ) || (anchname == "" ))
                        {
                                window.frames["helpframe"].location.href=fname+"_h.htm";
                                $(".help-frame-div").show();
                        }
                        else
                        {
                                window.frames["helpframe"].location.href=fname+"_h.htm#" + anchname;
                                $(".help-frame-div").show();
                        }

                        $(".help-frame-div").show();
                        pane.jScrollPane({showArrows:true});

                }
    }

function sort_bandwidth(a, b)
{
    return ((a.down_rate+a.up_rate) < (b.down_rate+b.up_rate))? 1 : -1;
}

function sort_alp(a, b)
{
    //console.log(a.name);
    return (a.name.toLowerCase() > b.name.toLowerCase()) ? 1: -1;
}

function sort_con(a, b)
{
    var mapping = { 'wired':0, '2.4g':1, '5g':2, '5g-2':3, 'guest2g':4, 'guest5g':5, 'guest5g-2':6, 'vpn':7};
    return (mapping[a.contype] > mapping[b.contype]) ? 1: -1;
}

var contype_mapping = {'wired':'Wired', '2.4g':'2.4G Wireless', '5g':'5G Wireless', '5g-2':'Second 5G Wireless', 'guest2g':'2.4G Guest Wireless', 'guest5g':'5G Guest Wireless', 'guest5g-2':'Second 5G Guest Wireless', 'vpn':'VPN'};
var devList=[];
var dln
var byUidDevs={};
var byMacDevs=[];
var byMacSmDevs=[];

function device(uid, mac, ip, name, ssid, contype, acl)
{
    this.uid = uid;
    this.mac = mac.toUpperCase();
    this.ip = ip;
    this.name = name.replace(/[ ]/g, "&nbsp;");
    this.opmode = 0;
    this.level = 0;
    this.group = 0;
    this.contype = contype;
    this.ssid = ssid;
    this.acl = acl;
    this.down_rate=0;
    this.up_rate=0;
    this.shown=0;
    this.clear_rate = clear_rate;
    
    if( this.ip == "")
        this.ip = "--";
    if( this.name == "")
        this.name = "--";
    
    function clear_rate()
    {
        this.down_rate=parseFloat(0).toFixed(2);
        this.up_rate=parseFloat(0).toFixed(2);     
    }
    
}

function sm_device(uid, mac, mode, parent_mac, band)
{
    this.uid = uid;
    this.mac = mac.toUpperCase();
    this.opmode = mode;
    this.parent_mac = parent_mac;
    this.parent_mac_br = '';
    this.mac_br = '';
    this.band = band;
    this.setParMac2br_ext = setParMac2br_ext;
    this.setMac2br_ext = setMac2br_ext;
    
    function setParMac2br_ext()
    {
        var strTmp = '';
        if(this.band=='2.4g' && this.parent_mac.length==17)
        {
            var wlan2g_mac = [];
            var tmp_mac = [];
            var pstr = 0;
            for(var i=0;i<6;i++)
            {
                wlan2g_mac[i]=parseInt(this.parent_mac.substring(pstr,pstr+2),16);
                tmp_mac[i]=parseInt(wlan2g_mac[i],10);
                pstr=pstr+3;
            }
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i] != 0x0)
                {
                    tmp_mac[i]--;
                    break;
                }
                tmp_mac[i] = 0xFF
            }
            var str_br_mac = [];
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i]>16)
                    str_br_mac[i] = tmp_mac[i].toString(16);
                else
                    str_br_mac[i] = '0'+tmp_mac[i].toString(16);
            }
            strTmp = strTmp.concat(str_br_mac[0],':',str_br_mac[1],':',str_br_mac[2],':',str_br_mac[3],':',str_br_mac[4],':',str_br_mac[5]);
            this.parent_mac_br=strTmp.toUpperCase();
        }
        else if(this.band=='5g' && this.parent_mac.length==17)
        {
            var wlan5g_mac = [];
            var tmp_mac = [];
            var pstr = 0;
            for(var i=0;i<6;i++)
            {
                wlan5g_mac[i]=parseInt(this.parent_mac.substring(pstr,pstr+2),16);
                tmp_mac[i]=parseInt(wlan5g_mac[i],10);
                pstr=pstr+3;
            }
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i] != 0x0)
                {
                    tmp_mac[i]--;
                    break;
                }
                tmp_mac[i] = 0xFF
            }
            if(tmp_mac[0]>2)
                tmp_mac[0]=tmp_mac[0]-2;
            
            var str_br_mac = [];
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i]<0)
                    tmp_mac[i]=0;
                    
                if(tmp_mac[i]>16)
                    str_br_mac[i] = tmp_mac[i].toString(16);
                else
                    str_br_mac[i] = '0'+tmp_mac[i].toString(16);
            }
            strTmp = strTmp.concat(str_br_mac[0],':',str_br_mac[1],':',str_br_mac[2],':',str_br_mac[3],':',str_br_mac[4],':',str_br_mac[5]);
            this.parent_mac_br=strTmp.toUpperCase();
        }
    }
    
    function setMac2br_ext()
    {
        var strTmp = '';
        if(this.band=='2.4g' && this.mac.length==17)
        {
            var wlan2g_mac = [];
            var tmp_mac = [];
            var pstr = 0;
            for(var i=0;i<6;i++)
            {
                wlan2g_mac[i]=parseInt(this.mac.substring(pstr,pstr+2),16);
                tmp_mac[i]=parseInt(wlan2g_mac[i],10);
                pstr=pstr+3;
            }
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i] != 0x0)
                {
                    tmp_mac[i]--;
                    break;
                }
                tmp_mac[i] = 0xFF
            }
            var str_br_mac = [];
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i]>16)
                    str_br_mac[i] = tmp_mac[i].toString(16);
                else
                    str_br_mac[i] = '0'+tmp_mac[i].toString(16);
            }
            strTmp = strTmp.concat(str_br_mac[0],':',str_br_mac[1],':',str_br_mac[2],':',str_br_mac[3],':',str_br_mac[4],':',str_br_mac[5]);
            this.mac_br=strTmp.toUpperCase();
        }
        else if(this.band=='5g' && this.mac.length==17)
        {
            var wlan5g_mac = [];
            var tmp_mac = [];
            var pstr = 0;
            for(var i=0;i<6;i++)
            {
                wlan5g_mac[i]=parseInt(this.mac.substring(pstr,pstr+2),16);
                tmp_mac[i]=parseInt(wlan5g_mac[i],10);
                pstr=pstr+3;
            }
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i] != 0x0)
                {
                    tmp_mac[i]--;
                    break;
                }
                tmp_mac[i] = 0xFF
            }
            if(tmp_mac[0]>=2)
                tmp_mac[0]=tmp_mac[0]-2;
            
            var str_br_mac = [];
            for(var i=5;i>=0;i--)
            {
                if(tmp_mac[i]<0)
                    tmp_mac[i]=0;
                    
                if(tmp_mac[i]>16)
                    str_br_mac[i] = tmp_mac[i].toString(16);
                else
                    str_br_mac[i] = '0'+tmp_mac[i].toString(16);
            }
            strTmp = strTmp.concat(str_br_mac[0],':',str_br_mac[1],':',str_br_mac[2],':',str_br_mac[3],':',str_br_mac[4],':',str_br_mac[5]);
            this.mac_br=strTmp.toUpperCase();
        }
    }
}

function show_all_sm() //smartmesh
{
    var linehtml="";
    var pre_contype;
    var first_line=1;
    $('#main').empty();
    var listBySort = -1;
    if(listBySort == 0 ){
        var sort_function = sort_bandwidth;
    }else if( listBySort == 2 && listBydevice == 1){
        var sort_function = sort_con;
    }else{
        var sort_function =sort_alp;
    }
        
    linehtml=linehtml+'<table border="0" id="table1" class="controller"  cellpadding="2" cellspacing="0" width="100%"><tr  data-level="header" class="header"  width="100%"><td align="center" width="15%"></td><td   align="center" width="5%"><span class="subheadtext">Status </span></td><td   align="center" width="20%" name="show_status"><span class="subheadtext">Connection Type</span></td><td   align="center" width="20%"><span class="subheadtext">MAC address</span></td></tr>';
    //if(0)
    for( var i in devList )
    {
        dev=devList[i];
        if(sort_function==sort_alp)
        {
            linehtml=linehtml+'<tr   data-level="'+dev.level+'" id="'+i+'" height="70px">';
            linehtml=linehtml+'<td   align="left"><span name="rule_ssid">'+dev.name+'<br>'+dev.ip+'</span></td>';
            linehtml=linehtml+'<td   align="center"  name="show_status" class="data"><span name="rule_status" class="acl_blocked">'+dev.acl+'</span></td>';
            var contype='';
            if(dev.contype=='wired'){
                contype=contype_mapping[dev.contype];
            }else if (dev.contype.indexOf('wds')!=-1){
                if(dev.contype.indexOf('wds0')!=-1)
                    contype=contype_mapping['2.4g']+'<br>'+dev.ssid;
                else if(dev.contype.indexOf('wds1')!=-1)
                    contype=contype_mapping['5g']+'<br>'+dev.ssid;
                else
                    contype='--';
            }else if(contype_mapping[dev.contype]){
                contype=contype_mapping[dev.contype]+'<br>'+dev.ssid;
            }else if(dev.contype.indexOf('2.4g')!=-1 && dev.contype.indexOf('5g')!=-1){
                contype=contype_mapping['2.4g']+'<br>'+contype_mapping['5g'];
            }else{
                contype='--';
            }
            linehtml=linehtml+'<td   align="center"><span name="rule_ip" class="data">'+contype+'</span></td>';
            linehtml=linehtml+'<td   align="center"><span name="rule_mac" class="data">'+dev.mac+'</span></td>';
            linehtml=linehtml+'</tr>';
        }else if(sort_function==sort_con)
        {
            ;
        }
      
    }
    linehtml=linehtml+'</table>';
    $('#main').append(linehtml);
    
}

function updateDevice(jobj_dev, jobj_sm2g, jobj_sm5g)
{
    if(jobj_dev.device.length < 2)
        return;
    devList=[];
    byUidDevs={};
    
    tmp_dln=0;
    var rootap=[];
    var extender=[];
    
    for(var i in jobj_dev.device)
    {
        dev = jobj_dev.device[i];
        
        if( dev.mac )
        {
            var mac = dev.mac;
            var uid = dev.uid;
            if(!byMacDevs[mac])
                byMacDevs[mac] = new device(uid, mac, dev.ip, dev.name, dev.ssid, dev.contype , dev.acl);
        }
    }
    
    
    for(var i in jobj_sm2g.sm_dev)
    {
        smdev = jobj_sm2g.sm_dev[i];
        
        if( smdev.mac )
        {
            var mac = smdev.mac.toUpperCase();;
            var uid = smdev.id;
            if(!byMacSmDevs[mac])
                byMacSmDevs[mac] = new sm_device(uid, mac, smdev.mode, smdev.parent_mac, '2.4g');
        }
    }
    for(var i in jobj_sm5g.sm_dev)
    {
        smdev = jobj_sm5g.sm_dev[i];
        
        if( smdev.mac )
        {
            var mac = smdev.mac.toUpperCase();;
            var uid = smdev.id;
            if(!byMacSmDevs[mac])
                byMacSmDevs[mac] = new sm_device(uid, mac, smdev.mode, smdev.parent_mac, '5g');
        }
    }
    //find root AP's mac
    var j = 0;
    var SmDevsCount= 0;
    for(var i in byMacSmDevs){
        if (byMacSmDevs[i].parent_mac.length==0){
            rootap[j++]=byMacSmDevs[i].mac;
        }
        SmDevsCount++;
    }
    
    //find extender and who behind extender
    var j = 0;
    for(var i in byMacSmDevs){
        if (byMacSmDevs[i].opmode==2){
            byMacSmDevs[i].setMac2br_ext();
            extender[j++]=byMacSmDevs[i].mac_br;
        }else if (byMacSmDevs[i].opmode==0){
            var behind_ext=1;
            for(var k in rootap){
                if(byMacSmDevs[i].parent_mac==rootap[k])  behind_ext=0;
            }
            if(behind_ext){
                byMacSmDevs[i].opmode=3;
                byMacSmDevs[i].setParMac2br_ext();
            }
        }
        
    }
    
    //set level
    var l2count=0;
    var group=0;
    for(var i in byMacDevs) 
    {
        var is_ext=0;
        if(byMacDevs[i].contype.indexOf('wds')!=-1 && SmDevsCount>0){
            
            for(var j in extender){
                if(byMacDevs[i].mac==extender[j])
                  is_ext=1;
            }
            if(is_ext){
                byMacDevs[i].level=1;
                group++;
                byMacDevs[i].group=group;
            }else{
                byMacDevs[i].level=2;
                l2count++;
            }
        }
    }
    
    //no level 2 station and set group

    if(l2count==0){
        for(var i in byMacDevs) 
        {
            byMacDevs[i].level=0;
        }
    }else{
        for(var i in byMacDevs) 
        {
            if(byMacDevs[i].level==2){
                if(byMacSmDevs[i])
                    byMacDevs[i].group=byMacDevs[byMacSmDevs[i].parent_mac_br].group;
            }
        }
    }

    dln=0;
    for(var i in byMacDevs)
    {
        if(byMacDevs[i].level==0){
            devList[dln++]=byMacDevs[i];
            byMacDevs[i].shown=1;
        }else if(byMacDevs[i].level==1){
            var extIndex=dln;
            var subCount=0;
            
            devList[dln++]=byMacDevs[i];
            byMacDevs[i].shown=1;
            for(var j in byMacDevs){
                
                if(byMacDevs[j].level==2 && byMacDevs[j].group==byMacDevs[i].group){
                    if(byMacSmDevs[j]){
                        if(byMacSmDevs[j].band=='2.4g')
                            byMacDevs[j].contype='2.4g';
                        else if(byMacSmDevs[j].band=='5g')
                            byMacDevs[j].contype='5g';
                    }
                    devList[dln++]=byMacDevs[j];
                    byMacDevs[j].shown=1;
                    subCount++;
                }else if(byMacDevs[j].level==2 && byMacDevs[i].contype==byMacDevs[j].contype && byMacDevs[j].group==0){
                    byMacDevs[j].contype='wired';
                    devList[dln++]=byMacDevs[j];
                    byMacDevs[j].shown=1;
                    subCount++;
                }
            }
            
            if(byMacSmDevs[i]){
                if(byMacSmDevs[i].band=='2.4g')
                    devList[extIndex].contype='2.4g';
                else if(byMacSmDevs[i].band=='5g')
                    devList[extIndex].contype='5g';
            }else{
                var band_ext = '';
                for(var j in byMacSmDevs){
                    if (byMacSmDevs[j].mac_br==byMacDevs[i].mac){
                        band_ext+=byMacSmDevs[j].band;
                    }
                }
                devList[extIndex].contype=band_ext;
            }
            if(subCount==0){
                devList[extIndex].level=0;
            }
        }
    }
    //console.log(dln);
    // for some cases smartmesh did not return proper info
    for(var i in byMacDevs)
    {
        if(byMacDevs[i].shown==0){
            byMacDevs[i].level=0;
            devList[dln++]=byMacDevs[i];
            byMacDevs[i].shown=1;
        }
    }
}

function adjust_column_backColor()
{
    var enable_access_control = document.getElementsByName("enable_access_control");
    var i;
    if(enable_access_control[0].value != "1") { 
        for(i=0 ; i<$('td[name=show_status]').length ; i++)
        {
            $('td[name=show_status]')[i].style.display = "none";    
        }
    }
    
}

function loadSettings()
{
    var dvo = <%788%>
    var sm_dev_2g = {<%789%>};
    var sm_dev_5g = {<%790%>};
    updateDevice(dvo,sm_dev_2g,sm_dev_5g);
    show_all_sm();
    var table1 = $('#table1').tabelize();
    adjust_column_backColor();
}   

//--></script></head>
<body  onload="change_size();loadSettings();" class="page-body"  onResize="change_size();" >
<img class="cover-image" src="img/cover-image_noh.gif">
<img class="body-image" src="img/subhead2-background_noh.jpg">
<div id="full-page-container">

<form id="target"  method="post" action="devices.cgi">
<input type="hidden" name="buttonHit"><input type="hidden" name="buttonValue">
<img class="subtop-image" src="img/subhead2-top_noh.gif">
<div class="subhead2"> Attached Devices</div>
<table border="0"    style="height:370px"  class="subhead2-table">

<tr><td class="scrollpane-table-seperate-border" colspan="2"><div class="scroll-pane" style="height:365px;width:620px;overflow:auto;scrolling:auto"><table style="border-collapse:collapse;width:97%">

<tr><td colspan="2" height="12" ><div style="background-image:url('liteblue.gif');width:100%">&nbsp;</div></td></tr>
<tr>
    <td nowrap colspan="2" align="right">Go to  <a href="DEV_control.htm">Access Control</a> to allow or block devices.</td>
</tr>

<tr>
    <td>
    <table border="0" cellpadding="3" cellspacing="0" width="100%">
        <tr>
            <td width="50%"></td>            
            <td width="30%" align="left">
                Access Control:
                <!-- access_control_mode: 1: enabled 0: disabled -->
                <!--
                Turned On
                -->
                
                Turned Off
                
                <br>
                <!-- access_all_new_devices: 1: allow all 0: block all -->
                
            </td>
            <td width="20%" align="right">
                &nbsp;&nbsp;&nbsp;<button value="Cancel" onclick="buttonClick(this,'Refresh');"  type="SUBMIT" name="refresh" class="button-rule" ><span class="roundleft_button"><span class="refresh-icon">&nbsp;&nbsp;&nbsp;&nbsp; Refresh</span></span><span class="roundright_button">&nbsp;&nbsp;&nbsp;&nbsp;</span></button>
            </td>
        </tr>        
    </table>
    </td>
</tr>
<tr>
 <td nowrap colspan="2"><b>Attached Devices List</b></td>
</tr>
<tr>
    <td colspan="2">
    <div id="main" class="main" style="width:100%"></div>
    </td>
    

</tr>
<tr><td colspan="2" height="12" ><div style="background-image:url('liteblue.gif');width:100%">&nbsp;</div></td></tr>

</table></div></td></tr>
<tr valign="middle" align="center"><td class="table-seperate-border" colspan="2" style="padding-left:0px"><div class="help-frame-div" > <iframe id="helpframe"  src="DEV_device2_h.htm" class="help-iframe" scrolling="no" name="helpframe" frameborder="0" onload="showHelpIframe();"></iframe> </div> </td> </tr>
</table>
   <img class="subfooter-image" src="img/subhead2-bottom.gif">
<div class="subhead2-bottom" >
    <span style="float:left;padding-left:10px;padding-top:5px"><img src="img/help-icon.gif" onmouseover="changeCursorPointer();" onclick="showHelpIframe();" onmouseout="changeCursorDefault();"></span>
    <span class="subhead2-text" style="float:left;padding-left:3px;" onclick="showHelpIframe();" onmouseover="changeCursorPointer();" onmouseout="changeCursorDefault();"> Help Center </span>
    <span class="button-help-arrow">
      <img src="img/helparrowdown-icon.gif" id="help-button" onclick="showHelpIframe();" onmouseover="changeCursorPointer();" onmouseout="changeCursorDefault();" ></span>
    <span class="subhead2-text" style="text-decoration:underline;float:right;padding-right:10px" onclick="showHelpIframe();" onmouseover="changeCursorPointer();" onmouseout="changeCursorDefault();"> Show/Hide Help Center </span>
      </div>



    <input name="enable_access_control" type="hidden" value= "<%782%>">
<a name="helpframe-anchor"></a>
</form>

</div>
</body>
</html>
